# ---------------------------------------------------------
# Options
# ---------------------------------------------------------
# nvimのescapeが遅くなる現象の対処 (https://honmushi.com/2020/10/23/tmux-vim-escape/)
set -g escape-time 0

# PrefixをCtrl-qに変更
set -g prefix C-q
unbind C-b

# ウィンドウインデックスを1から振る (0が押しにくいため)
set-option -g base-index 1
set-option -g pane-base-index 1

# マウススクロールでも操作できるように
set -g mouse on
bind-key -T edit-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T edit-mode-vi WheelDownPane send-keys -X scroll-down

# コピーモードの操作をvi風に (https://blog.nijohando.jp/post/tmux-2.6-and-reattach-to-user-namespace/)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# マウス選択範囲をクリップボードに (https://qiita.com/yujiG/items/b6971684dd97235f73f9)
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# tmux-powerline (https://github.com/erikw/tmux-powerline)
set-option -g status on
set-option -g status-bg "colour235"
set-option -g status-fg "colour136"
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 120
set-option -g status-right-length 120
set-option -g status-left "#(~/Documents/Github/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/Documents/Github/tmux-powerline/powerline.sh right)"
set-hook -g session-created 'run-shell "~/Documents/Github/tmux-powerline/powerline.sh init"' # prettifies the window-status segments

# tmuxペイン毎のステータスライン表示 (https://qiita.com/arks22/items/db8eb6a14223ce29219a)
set-option -g pane-border-status top
set-option -g pane-border-format "#[fg=black,bg=yellow] #P #[default]#(~/.tmux-pane-border #{pane_current_command} #{pane_pid} #{pane_current_path})"

## アクティブなペインのみ白っぽく変更
set -g window-style 'bg=#101010'
set -g window-active-style 'bg=#282828'

# ---------------------------------------------------------
# mapping
# ---------------------------------------------------------
# pane分割キーを変更
# bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# vimのキーバインドでペインを移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vimのキーバインドでペインをリサイズ
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# .tmux.confの読み込み
bind-key r source-file ~/.tmux.conf\; display-message "$HOME/.tmux.conf reloaded!"

# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# ---------------------------------------------------------
# tpm
# ---------------------------------------------------------
# tpm導入時に自動追加されたプラグイン
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# ---------------------------------------------------------
# Other plugins
# ---------------------------------------------------------
set -g @treemux-tree-nvim-init-file '~/.tmux/plugins/treemux/configs/treemux_init.lua'
set -g @plugin 'kiyoon/treemux'

# ---------------------------------------------------------
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# ---------------------------------------------------------
run '~/.tmux/plugins/tpm/tpm'

# ---------------------------------------------------------
# prefix + ctrl + ] で親子の操作を切り替える
# 参考: https://blue-red.ddo.jp/~ao/wiki/wiki.cgi?page=tmux#p16
# ---------------------------------------------------------
### バインド設定(root)
bind -T root C-] source-file ~/.tmux_toggle.conf
bind -n M-Pageup select-pane -t :.-
bind -n M-Pagedown select-pane -t :.+
bind -n C-Pageup select-window -t :-
bind -n C-Pagedown select-window -t :+
bind -n M-p select-pane -t :.-
bind -n M-@ select-pane -t :.+
bind -n M-P select-window -t :-
bind -n M-` select-window -t :+
### バインド設定(disable)
bind -T disable C-] source-file ~/.tmux_toggle.conf
# tmux list-keys -T rootと合わせる
bind -T disable MouseDown1Pane       select-pane -t = \; send-keys -M
bind -T disable MouseDown1Status     select-window -t =
bind -T disable MouseDown2Pane       select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "paste -p"
bind -T disable MouseDown3Pane       if-shell -F -t = "#{||:#{mouse_any_flag},#{&&:#{pane_in_mode},#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}}}" "select-pane -t= ; send -M" "display-menu -t= -xM -yM -T \"#[align=centre]#{pane_index} (#{pane_id})\" \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}\" < \"send -X history-top\" \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}\" > \"send -X history-bottom\" '' \"#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}\" C-r \"if -F \\\"#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}\\\" \\\"copy-mode -t=\\\" ; send -Xt= search-backward \\\"#{q:mouse_word}\\\"\" \"#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}\" C-y \"copy-mode -q ; send-keys -l -- \\\"#{q:mouse_word}\\\"\" \"#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}\" c \"copy-mode -q ; set-buffer -- \\\"#{q:mouse_word}\\\"\" \"#{?mouse_line,Copy Line,}\" l \"copy-mode -q ; set-buffer -- \\\"#{q:mouse_line}\\\"\" '' \"Horizontal Split\" h \"split-window -h\" \"Vertical Split\" v \"split-window -v\" '' \"#{?#{>:#{window_panes},1},,-}Swap Up\" u \"swap-pane -U\" \"#{?#{>:#{window_panes},1},,-}Swap Down\" d \"swap-pane -D\" \"#{?pane_marked_set,,-}Swap Marked\" s swap-pane '' Kill X kill-pane Respawn R \"respawn-pane -k\" \"#{?pane_marked,Unmark,Mark}\" m \"select-pane -m\" \"#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}\" z \"resize-pane -Z\""
bind -T disable MouseDown3Status     display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l "swap-window -t:-1" "#{?#{>:#{session_windows},1},,-}Swap Right" r "swap-window -t:+1" "#{?pane_marked_set,,-}Swap Marked" s swap-window '' Kill X kill-window Respawn R "respawn-window -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" Rename n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" '' "New After" w "new-window -a" "New At End" W new-window
bind -T disable MouseDown3StatusLeft display-menu -T "#[align=centre]#{session_name}" -t = -x M -y W Next n "switch-client -n" Previous p "switch-client -p" '' Renumber N "move-window -r" Rename n "command-prompt -I \"#S\" \"rename-session -- '%%'\"" '' "New Session" s new-session "New Window" w new-window
bind -T disable MouseDrag1Pane       if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -M"
bind -T disable MouseDrag1Border     resize-pane -M
bind -T disable WheelUpPane          if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -e"
bind -T disable WheelUpStatus        previous-window
bind -T disable WheelDownStatus      next-window
bind -T disable DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word ; run -d0.3 ; send -X copy-pipe-and-cancel"
bind -T disable TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line ; run -d0.3 ; send -X copy-pipe-and-cancel"
